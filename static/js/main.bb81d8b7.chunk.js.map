{"version":3,"sources":["services/db.js","services/user.js","components/UserNew.js","services/game.js","components/GameNew.js","components/Home.js","services/utils.js","components/Game.js","components/GameLobby.js","components/App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getLocalUser","localUser","JSON","parse","localStorage","getItem","error","console","log","removeItem","setLocalUser","user","setItem","stringify","addUser","a","db","collection","add","then","document","id","getUser","userId","doc","get","snapshot","data","UserNew","setUser","name","email","className","onSubmit","e","preventDefault","target","elements","value","trim","toLowerCase","type","placeholder","getGameDocument","gameId","addPlayerToGame","gameDocument","constructor","values","weapon","set","merge","addWeaponToGame","update","getWeaponForPlayer","getPlayers","userIds","Object","keys","where","FieldPath","documentId","docs","map","index","getWinner","gameData","players","length","some","player","aWeapon","bWeapon","deleteWeapons","forEach","catch","err","GameNew","useState","setGameId","to","onClick","Math","round","random","Home","areObjectsSame","objectA","objectB","i","key","areArraysSame","arrayA","arrayB","Array","arrayASorted","slice","sort","arrayBSorted","itemA","itemB","Game","setPlayers","setWeapon","winner","setWinner","gamePlayers","onSnapshot","gameWinner","setTimeout","opponent","find","getWinnerCopy","join","htmlFor","GameLobby","useParams","numPlayers","setNumPlayers","snapshotPlayers","includes","App","path","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb81d8b7.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\n\nimport 'firebase/firestore';\n\nfirebase.initializeApp({\n\tapiKey: 'AIzaSyCpU5AfFhgbrjaTR8sKyB_O6h9VYGCNmDk',\n\tauthDomain: 'rock-paper-scissors-b198e.firebaseapp.com',\n\tdatabaseURL: 'https://rock-paper-scissors-b198e.firebaseio.com',\n\tprojectId: 'rock-paper-scissors-b198e',\n\tstorageBucket: 'rock-paper-scissors-b198e.appspot.com',\n\tmessagingSenderId: '530589049037',\n\tappId: '1:530589049037:web:f677fbd6b66d8483654984'\n});\n\nexport default firebase.firestore();\n","import db from './db';\n\nexport const getLocalUser = () => {\n\tlet localUser = {};\n\n\ttry {\n\t\tlocalUser = JSON.parse(localStorage.getItem('player')) || {};\n\t} catch (error) {\n\t\tconsole.log('Deleting corrupted player in local storage.');\n\t\tlocalStorage.removeItem('player');\n\t}\n\n\treturn localUser;\n};\n\nexport const setLocalUser = user => {\n\tlocalStorage.setItem('player', JSON.stringify(user));\n};\n\nexport const addUser = async user => {\n\treturn db.collection('users')\n\t\t.add(user)\n\t\t.then(document => document.id);\n};\n\nexport const getUser = async userId => {\n\treturn db.collection('users')\n\t\t.doc(userId)\n\t\t.get()\n\t\t.then(snapshot => snapshot.data());\n};\n","import React from 'react';\nimport { addUser } from '../services/user';\nimport './UserNew.css';\n\nfunction UserNew({ user, setUser }) {\n\tconst onSubmitHandler = e => {\n\t\te.preventDefault();\n\n\t\tconst name = e.target.elements.name.value.trim();\n\t\tconst email = e.target.elements.email.value.trim().toLowerCase();\n\n\t\tif (!name || !email) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst user = { name, email };\n\n\t\taddUser(user)\n\t\t\t.then(id => {\n\t\t\t\tuser.id = id;\n\t\t\t\tsetUser(user);\n\t\t\t});\n\t};\n\n\tif (typeof user.name !== 'undefined' && typeof user.email !== 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div className=\"row\">\n\t\t\t<div className=\"col-sm-4 offset-md-4\">\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t<h5 className=\"card-title\">New phone, who dis?</h5>\n\t\t\t\t\t\t<p className=\"card-text\">Before we begin, I need to know who you are</p>\n\t\t\t\t\t\t<form onSubmit={ onSubmitHandler }>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Your Name\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Your Email\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary btn-block\">Let's RPS!</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default UserNew;\n","import * as firebase from 'firebase/app';\nimport db from './db';\n\nexport const getGameDocument = gameId => {\n\treturn db.collection('games')\n\t\t.doc(gameId);\n};\n\nexport const addPlayerToGame = async (gameId, userId) => {\n\tconst gameDocument = gameId.constructor.name === 'DocumentReference'\n\t\t? gameId\n\t\t: getGameDocument(gameId);\n\n\tconst values = {};\n\tvalues[userId] = { weapon: null };\n\n\treturn gameDocument.set(values, { merge: true });\n};\n\nexport const addWeaponToGame = async (gameDocument, userId, weapon) => {\n\tconst values = {};\n\tvalues[userId] = { weapon };\n\n\treturn gameDocument.update(values);\n};\n\nexport const getWeaponForPlayer = async (gameDocument, userId) => {\n\treturn gameDocument.get()\n\t\t.then(snapshot => snapshot.data()[userId].weapon);\n};\n\nexport const getPlayers = async gameDocument => {\n\treturn gameDocument.get()\n\t\t.then(snapshot => {\n\t\t\tconst userIds = Object.keys(snapshot.data());\n\n\t\t\treturn db.collection('users')\n\t\t\t\t.where(firebase.firestore.FieldPath.documentId(), 'in', userIds)\n\t\t\t\t.get()\n\t\t\t\t.then(snapshot => snapshot.docs.map((document, index) => {\n\t\t\t\t\tconst user = document.data();\n\t\t\t\t\tuser.id = userIds[index];\n\t\t\t\t\treturn user;\n\t\t\t\t}));\n\t\t});\n};\n\nexport const getWinner = gameData => {\n\tconst players = Object.keys(gameData);\n\n\tif (players.length < 2 || players.some(player => gameData[player].weapon === null)) {\n\t\treturn null;\n\t}\n\n\tconst [aWeapon, bWeapon] = players.map(player => ({\n\t\tuserId: player,\n\t\tweapon: gameData[player].weapon\n\t}));\n\n\tif (\n\t\t(aWeapon.weapon === 'Rock' && bWeapon.weapon === 'Scissors')\n\t\t|| (aWeapon.weapon === 'Paper' && bWeapon.weapon === 'Rock')\n\t\t|| (aWeapon.weapon === 'Scissors' && bWeapon.weapon === 'Paper')\n\t) {\n\t\treturn aWeapon;\n\t} else if (aWeapon.weapon === bWeapon.weapon) {\n\t\treturn 0; // Maybe not the best representation of a tie\n\t} else {\n\t\treturn bWeapon;\n\t}\n};\n\nexport const deleteWeapons = gameDocument => {\n\tgameDocument.get()\n\t\t.then(snapshot => {\n\t\t\tObject.keys(snapshot.data()).forEach(userId => {\n\t\t\t\taddPlayerToGame(gameDocument, userId)\n\t\t\t\t\t.catch(err => console.log(`Error encountered: ${err}`));\n\t\t\t});\n\t\t});\n};\n","import React, {\n\tuseState\n} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { addPlayerToGame } from '../services/game';\n\nfunction GameNew({ userId }) {\n\tconst [\n\t\tgameId,\n\t\tsetGameId\n\t] = useState(null);\n\n\tconst onClickHostHandler = e => {\n\t\tconst gameId = `Game_${Math.round(Math.random() * 1000)}`;\n\n\t\taddPlayerToGame(gameId, userId)\n\t\t\t.then(() => setGameId(gameId));\n\t};\n\n\tconst onSubmitJoinHandler = e => {\n\t\te.preventDefault();\n\n\t\tconst gameId = e.target.elements.name.value.trim();\n\n\t\taddPlayerToGame(gameId, userId)\n\t\t\t.then(() => setGameId(gameId));\n\t};\n\n\tif (gameId) {\n\t\treturn <Redirect to={`/react-rps/game/${gameId}`} />;\n\t}\n\n\treturn (\n\t\t<div className=\"row\">\n\t\t\t<div className=\"col-sm-4 offset-sm-4\">\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t<p className=\"card-text\">Decide if you want to start a new game, or join an existing one</p>\n\t\t\t\t\t\t<button className=\"btn btn-primary btn-block mb-3\" onClick={ onClickHostHandler }>Start a new game</button>\n\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t<form onSubmit={ onSubmitJoinHandler }>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Game Name\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary btn-block\">Join a game</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default GameNew;\n","import React, {\n\tuseState\n} from 'react';\nimport UserNew from './UserNew';\nimport GameNew from './GameNew';\nimport {\n\tgetLocalUser,\n\tsetLocalUser\n} from '../services/user';\n\nfunction Home() {\n\tconst [\n\t\tuser,\n\t\tsetUser\n\t] = useState(getLocalUser());\n\n\tconst setLocalAndStateUser = user => {\n\t\tsetLocalUser(user);\n\t\tsetUser(user);\n\t};\n\n\treturn (\n\t\t<div className=\"Home\">\n\t\t\t<UserNew user={ user } setUser={ setLocalAndStateUser } />\n\t\t\t{ user.id\n\t\t\t\t? <GameNew userId={ user.id }/>\n\t\t\t\t: null }\n\t\t</div>\n\t);\n}\n\nexport default Home;\n","export const areObjectsSame = (objectA, objectB) => {\n\tif (!(objectA instanceof Object && objectB instanceof Object)) {\n\t\treturn false;\n\t}\n\n\tconst keys = Object.keys(objectA);\n\tif (keys.length !== Object.keys(objectB).length) {\n\t\treturn false\n\t}\n\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key = keys[i];\n\t\tif (objectA[key] !== objectB[key]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n\nexport const areArraysSame = (arrayA, arrayB) => {\n\tif (\n\t\t!(arrayA instanceof Array && arrayB instanceof Array)\n\t\t|| arrayA.length !== arrayB.length\n\t) {\n\t\treturn false;\n\t}\n\n\tconst arrayASorted = arrayA.slice(0).sort();\n\tconst arrayBSorted = arrayB.slice(0).sort();\n\n\tfor (let i = 0; i < arrayASorted.length; i++) {\n\t\tconst itemA = arrayASorted[i];\n\t\tconst itemB = arrayBSorted[i];\n\n\t\tif (\n\t\t\t!(\n\t\t\t\t(\n\t\t\t\t\titemA instanceof Object\n\t\t\t\t\t&& areObjectsSame(itemA, itemB)\n\t\t\t\t) || (\n\t\t\t\t\titemA instanceof Array\n\t\t\t\t\t&& areArraysSame(itemA, itemB)\n\t\t\t\t) || (\n\t\t\t\t\titemA === itemB\n\t\t\t\t)\n\t\t\t)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n","import React, {\n\tuseState\n} from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n\taddWeaponToGame,\n\tdeleteWeapons,\n\tgetPlayers,\n\tgetWeaponForPlayer,\n\tgetWinner\n} from '../services/game';\nimport { getUser } from '../services/user';\nimport {\n\tareArraysSame,\n\tareObjectsSame\n} from '../services/utils';\n\nfunction Game({ gameDocument, userId }) {\n\tconst [\n\t\tplayers,\n\t\tsetPlayers\n\t] = useState([]);\n\n\tconst [\n\t\tweapon,\n\t\tsetWeapon\n\t] = useState(null);\n\n\tconst [\n\t\twinner,\n\t\tsetWinner\n\t] = useState(null);\n\n\tgetPlayers(gameDocument)\n\t\t.then(gamePlayers => {\n\t\t\tif (!areArraysSame(gamePlayers, players)) {\n\t\t\t\tsetPlayers(gamePlayers);\n\t\t\t}\n\t\t});\n\n\tgetWeaponForPlayer(gameDocument, userId)\n\t\t.then(weapon => setWeapon(weapon));\n\n\tgameDocument.onSnapshot(snapshot => {\n\t\tconst gameWinner = getWinner(snapshot.data());\n\n\t\tif (gameWinner === 0) {\n\t\t\tsetWinner(gameWinner);\n\t\t} else if (gameWinner) {\n\t\t\tconst { userId, weapon } = gameWinner;\n\n\t\t\tif (userId && weapon) {\n\t\t\t\tgetUser(userId)\n\t\t\t\t\t.then(user => {\n\t\t\t\t\t\tuser.id = userId;\n\t\t\t\t\t\tuser.weapon = weapon;\n\n\t\t\t\t\t\tif (!areObjectsSame(user, winner)) {\n\t\t\t\t\t\t\tsetWinner(user);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\tconst getPlayerNamesCopy = () => {\n\t\treturn players.map(player => player.name)\n\t\t\t.join(' vs ');\n\t};\n\n\tconst getWinnerCopy = () => {\n\t\tif (winner === 0) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tdeleteWeapons(gameDocument);\n\t\t\t\tsetWinner(null);\n\t\t\t}, 3000);\n\n\t\t\treturn `It was a tie! Both selected ${weapon}. Starting a new match...`;\n\t\t} else if (winner) {\n\t\t\tif (winner.id === userId) {\n\t\t\t\tconst opponent = players.find(player => player.id !== winner.id);\n\t\t\t\treturn `Congrats, you beat ${opponent.name} with ${weapon}!`;\n\t\t\t} else {\n\t\t\t\treturn `Sorry, ${winner.name} won with ${winner.weapon}.`;\n\t\t\t}\n\t\t}\n\t};\n\n\tconst onSubmitHandler = e => {\n\t\te.preventDefault();\n\n\t\tconst weapon = e.target.elements.weapon.value;\n\n\t\taddWeaponToGame(gameDocument, userId, weapon)\n\t\t\t.then(() => setWeapon(weapon));\n\t};\n\n\tif (winner !== null) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h5 className=\"card-title\">{ getWinnerCopy() }</h5>\n\t\t\t\t{ winner\n\t\t\t\t\t? <Link to=\"/\" className=\"btn btn-primary btn-block\">Play again?</Link>\n\t\t\t\t\t: null }\n\t\t\t</>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h5 className=\"card-title\">{ getPlayerNamesCopy() }</h5>\n\t\t\t{ weapon\n\t\t\t\t? <p className=\"card-text\">You chose {weapon}! Waiting for your opponent...</p>\n\t\t\t\t: <>\n\t\t\t\t\t<p className=\"card-text\">Choose your weapon!</p>\n\t\t\t\t\t<form onSubmit={ onSubmitHandler }>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<div className=\"form-check\">\n\t\t\t\t\t\t\t\t<input id=\"weapon_rock\" className=\"form-check-input\" type=\"radio\" name=\"weapon\" value=\"Rock\"/>\n\t\t\t\t\t\t\t\t<label htmlFor=\"weapon_rock\" className=\"form-check-label\">Rock</label>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"form-check\">\n\t\t\t\t\t\t\t\t<input id=\"weapon_paper\" className=\"form-check-input\" type=\"radio\" name=\"weapon\" value=\"Paper\"/>\n\t\t\t\t\t\t\t\t<label htmlFor=\"weapon_paper\" className=\"form-check-label\">Paper</label>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"form-check\">\n\t\t\t\t\t\t\t\t<input id=\"weapon_scissors\" className=\"form-check-input\" type=\"radio\" name=\"weapon\" value=\"Scissors\"/>\n\t\t\t\t\t\t\t\t<label htmlFor=\"weapon_scissors\" className=\"form-check-label\">Scissors</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary btn-block\">Shoot!</button>\n\t\t\t\t\t</form>\n\t\t\t\t</>\n\t\t\t}\n\t\t</>\n\t);\n}\n\nexport default Game;\n","import React, {\n\tuseState,\n} from 'react';\nimport {\n\tRedirect,\n\tuseParams\n} from 'react-router-dom';\nimport Game from './Game';\nimport { getLocalUser } from '../services/user';\nimport {\n\taddPlayerToGame,\n\tgetGameDocument\n} from '../services/game';\n\n\nfunction GameLobby() {\n\tconst { gameId } = useParams();\n\tconst { id: userId } = getLocalUser();\n\n\tconst [\n\t\tnumPlayers,\n\t\tsetNumPlayers\n\t] = useState(0);\n\n\tif (!gameId || !userId) {\n\t\treturn <Redirect to=\"/react-rps\" />;\n\t}\n\n\tconst gameDocument = getGameDocument(gameId);\n\tgameDocument.onSnapshot(snapshot => {\n\t\tconst snapshotPlayers = Object.keys(snapshot.data());\n\n\t\tif (!snapshotPlayers.includes(userId)) {\n\t\t\taddPlayerToGame(gameDocument, userId);\n\t\t\treturn;\n\t\t}\n\n\t\tsetNumPlayers(snapshotPlayers.length);\n\t}, err => {\n\t\tconsole.log(`Encountered error: ${err}`);\n\t});\n\n\treturn (\n\t\t<div className=\"row\">\n\t\t\t<div className=\"col-sm-4 offset-sm-4\">\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<div className=\"card-header\">\n\t\t\t\t\t\t{ gameId }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t{ numPlayers < 2\n\t\t\t\t\t\t\t? <h5 className=\"card-title\">Waiting for player...</h5>\n\t\t\t\t\t\t\t: <Game gameDocument={ gameDocument } userId={ userId } /> }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default GameLobby;\n","import React from 'react';\nimport {\n\tBrowserRouter as Router,\n\tRedirect,\n\tRoute,\n\tSwitch\n} from 'react-router-dom';\nimport Home from './Home';\nimport GameLobby from './GameLobby';\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/react-rps/game/:gameId\">\n\t\t\t\t\t<GameLobby />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/react-rps\">\n\t\t\t\t\t<Home />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t<Redirect to=\"/react-rps\"/>\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}