{"version":3,"sources":["components/DashboardGamesList.js","services/db.js","services/game.js","services/user.js","components/Dashboard.js","services/utils.js","components/Game.js","components/GameLobby.js","components/GameNew.js","components/UserNew.js","components/Home.js","components/Navbar.js","components/App.js","serviceWorker.js","index.js"],"names":["DashbaordGamesList","title","games","Object","keys","length","className","map","documentId","to","key","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getGameDocument","gameId","db","collection","doc","addPlayerToGame","userId","values","weapon","DocumentReference","add","catch","err","console","log","addWeaponToGame","gameDocument","a","where","get","then","snapshot","docs","ref","update","getWeaponForPlayer","empty","data","getWinner","players","winner","tie","some","aPlayer","bPlayer","assign","deleteWeapons","forEach","document","getGamesForUser","collectionGroup","parent","getLocalUser","localUser","JSON","parse","localStorage","getItem","error","removeItem","setLocalUser","user","setItem","stringify","addUser","usersCollection","email","id","userDocument","name","getUser","Dashboard","useState","gamesWaitingForOpponent","setGamesWaitingForOpponent","gamesWaitingForOpponentMove","setGamesWaitingForOpponentMove","gamesWaitingForYourMove","setGamesWaitingForYourMove","wins","ties","losses","stats","setStats","useEffect","documents","promises","Promise","all","handleGameUpdates","snapshots","newGamesWaitingForOpponent","newGamesWaitingForOpponentMove","newGamesWaitingForYourMove","newStats","size","hasOwnProperty","find","player","areObjectsSame","objectA","objectB","i","areArraysSame","arrayA","arrayB","Array","arrayASorted","slice","sort","arrayBSorted","itemA","itemB","Game","setWeapon","setWinner","gameWinner","getPlayerNamesCopy","join","getWeaponIcon","onClickWeaponHandler","e","currentTarget","dataset","setTimeout","type","style","flexGrow","data-name","onClick","GameLobby","useParams","setPlayers","redirectTo","setRedirectTo","onSnapshot","gamePlayers","window","location","hash","GameNew","setGameId","Math","round","random","onSubmit","preventDefault","target","elements","value","trim","placeholder","UserNew","setUser","toLowerCase","Home","URLSearchParams","useLocation","search","Navbar","dashboardMatch","useRouteMatch","path","strict","homeMatch","App","exact","from","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4e84fee.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction DashbaordGamesList({ title, games }) {\n\tif (!Object.keys(games).length) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<hr/>\n\n\t\t\t<h5 className=\"card-title\">{ title }</h5>\n\t\t\t<div className=\"btn-group-vertical d-block\">\n\t\t\t\t{ Object.keys(games).map(documentId => (\n\t\t\t\t\t<Link className=\"btn btn-primary\" to={ `/game/${documentId}` } key={ documentId }>{ documentId }</Link>\n\t\t\t\t)) }\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default DashbaordGamesList;\n","import * as firebase from 'firebase/app';\n\nimport 'firebase/firestore';\n\nfirebase.initializeApp({\n\tapiKey: 'AIzaSyCpU5AfFhgbrjaTR8sKyB_O6h9VYGCNmDk',\n\tauthDomain: 'rock-paper-scissors-b198e.firebaseapp.com',\n\tdatabaseURL: 'https://rock-paper-scissors-b198e.firebaseio.com',\n\tprojectId: 'rock-paper-scissors-b198e',\n\tstorageBucket: 'rock-paper-scissors-b198e.appspot.com',\n\tmessagingSenderId: '530589049037',\n\tappId: '1:530589049037:web:f677fbd6b66d8483654984'\n});\n\nexport default firebase.firestore();\n","import * as firebase from 'firebase/app';\nimport db from './db';\n\n/**\n * Gets a document reference\n *\n * @param   {string}                                gameId\n * @returns {firebase.firestore.DocumentReference}\n */\nexport const getGameDocument = gameId => db.collection('games').doc(gameId);\n\n/**\n * Inserts a player with no weapon to the given game\n *\n * @param   {string|firebase.firestore.DocumentReference}   gameId\n * @param   {string}                                        userId\n */\nexport const addPlayerToGame = (gameId, userId) => {\n\tconst gameDocument = gameId instanceof firebase.firestore.DocumentReference\n\t\t? gameId\n\t\t: getGameDocument(gameId);\n\n\tconst values = {\n\t\tuserId,\n\t\tweapon: null\n\t};\n\n\tgameDocument.collection('players').add(values)\n\t\t.catch(err => console.log(`Error encountered: ${err}`));\n};\n\n/**\n * Updates a player's weapon\n *\n * @param   {firebase.firestore.DocumentReference}  gameDocument\n * @param   {string}                                userId\n * @param   {string}                                weapon\n * @returns {Promise<firebase.firestore.QuerySnapshot>}\n */\nexport const addWeaponToGame = async (gameDocument, userId, weapon) => {\n\tconst values = { weapon };\n\n\treturn gameDocument.collection('players')\n\t\t.where('userId', '==', userId)\n\t\t.get()\n\t\t.then(snapshot => snapshot.docs[0].ref.update(values));\n};\n\n/**\n * Gets the weapon for the given player\n *\n * @param   {firebase.firestore.DocumentReference}  gameDocument\n * @param   {string}                                userId\n * @returns {Promise<firebase.firestore.QuerySnapshot>}\n */\nexport const getWeaponForPlayer = async (gameDocument, userId) => gameDocument.collection('players')\n\t.where('userId', '==', userId)\n\t.get()\n\t.then(snapshot => snapshot.empty\n\t\t? addPlayerToGame(gameDocument, userId).then(() => null)\n\t\t: snapshot.docs[0].data().weapon);\n\n/**\n * Determines the winner from the document snapshot data\n *\n * @param   {{userId: string, weapon: *}[]}   players\n * @returns {{tie: boolean, userId: *, weapon: *}}\n */\nexport const getWinner = players => {\n\tconst winner = {\n\t\ttie: false,\n\t\tuserId: null,\n\t\tweapon: null\n\t};\n\n\tif (\n\t\tplayers.length < 2\n\t\t|| players.some(({ weapon }) => weapon === null)\n\t) {\n\t\treturn winner;\n\t}\n\n\tconst [aPlayer, bPlayer] = players;\n\n\tif (\n\t\t(aPlayer.weapon === 'Rock' && bPlayer.weapon === 'Scissors')\n\t\t|| (aPlayer.weapon === 'Paper' && bPlayer.weapon === 'Rock')\n\t\t|| (aPlayer.weapon === 'Scissors' && bPlayer.weapon === 'Paper')\n\t) {\n\t\tObject.assign(winner, aPlayer);\n\t} else if (aPlayer.weapon === bPlayer.weapon) {\n\t\twinner.tie = true;\n\t\twinner.weapon = aPlayer.weapon;\n\t} else {\n\t\tObject.assign(winner, bPlayer);\n\t}\n\n\treturn winner;\n};\n\n/**\n * Resets the player's weapons for the given game\n *\n * @param {firebase.firestore.DocumentReference}    gameDocument\n */\nexport const deleteWeapons = gameDocument => gameDocument.collection('players')\n\t.get()\n\t.then(snapshot => {\n\t\tsnapshot.docs.forEach(document => document.ref.update({ weapon: null }));\n\t});\n\n/**\n * Gets all the games where the given user is a player of\n *\n * @param userId\n * @returns {Promise<firebase.firestore.DocumentReference[]>}\n */\nexport const getGamesForUser = userId => db.collectionGroup('players')\n\t.where('userId', '==', userId)\n\t.get()\n\t.then(snapshot => snapshot.docs.map(document => document.ref.parent.parent));\n","import db from './db';\n\n/**\n * Gets the local user from the browser's local storage\n *\n * @returns {{}|{email: string, id: string, name: string}}\n */\nexport const getLocalUser = () => {\n\tlet localUser = {};\n\n\ttry {\n\t\tlocalUser = JSON.parse(localStorage.getItem('player')) || {};\n\t} catch (error) {\n\t\tconsole.log('Deleting corrupted player in local storage.');\n\t\tlocalStorage.removeItem('player');\n\t}\n\n\treturn localUser;\n};\n\n/**\n * Sets the given user on the browser's local storage\n *\n * @param   {object}    user\n */\nexport const setLocalUser = user => localStorage.setItem('player', JSON.stringify(user));\n\n/**\n * Inserts a user to the users collection\n *\n * @param   {object}                                        user\n * @returns {Promise<firebase.firestore.DocumentReference>}\n */\nexport const addUser = async user => {\n\tconst usersCollection = db.collection('users');\n\n\treturn usersCollection.where('email', '==', user.email)\n\t\t.get()\n\t\t.then(snapshot => {\n\t\t\tif (snapshot.empty) {\n\t\t\t\treturn usersCollection.add(user)\n\t\t\t\t\t.then(document => {\n\t\t\t\t\t\tuser.id = document.id;\n\t\t\t\t\t\treturn user;\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst userDocument = snapshot.docs[0].ref;\n\t\t\treturn userDocument.update({ name: user.name })\n\t\t\t\t.then(() => {\n\t\t\t\t\tuser.id = userDocument.id;\n\t\t\t\t\treturn user;\n\t\t\t\t});\n\t\t});\n};\n\n/**\n * Gets the data for the given user\n *\n * @param   {string}                                    userId\n * @returns {Promise<firebase.firestore.DocumentData>}\n */\nexport const getUser = async userId => db.collection('users')\n\t.doc(userId)\n\t.get()\n\t.then(snapshot => snapshot.data());\n","import React, {\n\tuseEffect,\n\tuseState\n} from 'react';\nimport {\n\tLink,\n\tRedirect\n} from 'react-router-dom';\nimport DashbaordGamesList from './DashboardGamesList';\nimport {\n\tgetGamesForUser,\n\tgetWinner\n} from '../services/game';\nimport { getLocalUser } from '../services/user';\n\nfunction Dashboard() {\n\tconst { id: userId } = getLocalUser();\n\n\tconst [\n\t\tgamesWaitingForOpponent,\n\t\tsetGamesWaitingForOpponent\n\t] = useState({});\n\n\tconst [\n\t\tgamesWaitingForOpponentMove,\n\t\tsetGamesWaitingForOpponentMove\n\t] = useState({});\n\n\tconst [\n\t\tgamesWaitingForYourMove,\n\t\tsetGamesWaitingForYourMove\n\t] = useState({});\n\n\tconst [\n\t\tstats,\n\t\tsetStats\n\t] = useState({ wins: 0, ties: 0, losses: 0 });\n\n\tuseEffect(() => {\n\t\tif (!userId) {\n\t\t\treturn;\n\t\t}\n\n\t\tgetGamesForUser(userId)\n\t\t\t.then(documents => {\n\t\t\t\tconst promises = documents.map(document => document.collection('players').get());\n\n\t\t\t\tPromise.all(promises)\n\t\t\t\t\t.then(handleGameUpdates);\n\t\t\t});\n\t}, [userId]);\n\n\tconst handleGameUpdates = snapshots => {\n\t\tconst newGamesWaitingForOpponent = Object.assign({}, gamesWaitingForOpponent);\n\t\tconst newGamesWaitingForOpponentMove = Object.assign({}, gamesWaitingForOpponentMove);\n\t\tconst newGamesWaitingForYourMove = Object.assign({}, gamesWaitingForYourMove);\n\t\tconst newStats = Object.assign({}, stats);\n\n\t\tsnapshots.forEach(snapshot => {\n\t\t\tconst gameDocument = snapshot.docs[0].ref.parent.parent;\n\n\t\t\tif (snapshot.size < 2) {\n\t\t\t\tnewGamesWaitingForOpponent[gameDocument.id] = gameDocument;\n\t\t\t} else {\n\t\t\t\tif (newGamesWaitingForOpponent.hasOwnProperty(gameDocument.id)) {\n\t\t\t\t\tdelete newGamesWaitingForOpponent[gameDocument.id];\n\t\t\t\t}\n\n\t\t\t\tconst players = snapshot.docs.map(document => document.data());\n\t\t\t\tconst winner = getWinner(players);\n\n\t\t\t\tif (\n\t\t\t\t\twinner.userId === null\n\t\t\t\t\t&& winner.tie === false\n\t\t\t\t) {\n\t\t\t\t\tconst { weapon } = players.find(player => player.userId === userId);\n\t\t\t\t\tweapon\n\t\t\t\t\t\t? newGamesWaitingForOpponentMove[gameDocument.id] = gameDocument\n\t\t\t\t\t\t: newGamesWaitingForYourMove[gameDocument.id] = gameDocument;\n\t\t\t\t} else {\n\t\t\t\t\tif (newGamesWaitingForOpponentMove.hasOwnProperty(gameDocument.id)) {\n\t\t\t\t\t\tdelete newGamesWaitingForOpponentMove[gameDocument.id];\n\t\t\t\t\t} else if (newGamesWaitingForYourMove.hasOwnProperty(gameDocument.id)) {\n\t\t\t\t\t\tdelete newGamesWaitingForYourMove[gameDocument.id];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (winner.userId === userId) {\n\t\t\t\t\t\tnewStats.wins++;\n\t\t\t\t\t} else if (winner.tie) {\n\t\t\t\t\t\tnewStats.ties++;\n\t\t\t\t\t} else if (winner.userId !== null) {\n\t\t\t\t\t\tnewStats.losses++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tsetGamesWaitingForOpponent(newGamesWaitingForOpponent);\n\t\tsetGamesWaitingForOpponentMove(newGamesWaitingForOpponentMove);\n\t\tsetGamesWaitingForYourMove(newGamesWaitingForYourMove);\n\t\tsetStats(newStats);\n\t};\n\n\tif (!userId) {\n\t\treturn <Redirect to=\"/home?redirectTo=/dashboard\" />;\n\t}\n\n\treturn (\n\t\t<div className=\"row\">\n\t\t\t<div className=\"col-sm-8 offset-sm-2\">\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<div className=\"card-header\">Dashboard</div>\n\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t<h5 className=\"card-title\">Your Stats</h5>\n\t\t\t\t\t\t<p className=\"card-text\"><span className=\"strong\">Wins:</span> {stats.wins}</p>\n\t\t\t\t\t\t<p className=\"card-text\"><span className=\"strong\">Ties:</span> {stats.ties}</p>\n\t\t\t\t\t\t<p className=\"card-text\"><span className=\"strong\">Losses:</span> {stats.losses}</p>\n\n\t\t\t\t\t\t<DashbaordGamesList title=\"Waiting for an opponent...\" games={ gamesWaitingForOpponent } />\n\t\t\t\t\t\t<DashbaordGamesList title=\"Waiting for opponent's move...\" games={ gamesWaitingForOpponentMove } />\n\t\t\t\t\t\t<DashbaordGamesList title=\"Waiting for your move...\" games={ gamesWaitingForYourMove } />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Dashboard;\n","export const areObjectsSame = (objectA, objectB) => {\n\tif (!(objectA instanceof Object && objectB instanceof Object)) {\n\t\treturn false;\n\t}\n\n\tconst keys = Object.keys(objectA);\n\tif (keys.length !== Object.keys(objectB).length) {\n\t\treturn false\n\t}\n\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key = keys[i];\n\t\tif (objectA[key] !== objectB[key]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n\nexport const areArraysSame = (arrayA, arrayB) => {\n\tif (\n\t\t!(arrayA instanceof Array && arrayB instanceof Array)\n\t\t|| arrayA.length !== arrayB.length\n\t) {\n\t\treturn false;\n\t}\n\n\tconst arrayASorted = arrayA.slice(0).sort();\n\tconst arrayBSorted = arrayB.slice(0).sort();\n\n\tfor (let i = 0; i < arrayASorted.length; i++) {\n\t\tconst itemA = arrayASorted[i];\n\t\tconst itemB = arrayBSorted[i];\n\n\t\tif (\n\t\t\t!(\n\t\t\t\t(\n\t\t\t\t\titemA instanceof Object\n\t\t\t\t\t&& areObjectsSame(itemA, itemB)\n\t\t\t\t) || (\n\t\t\t\t\titemA instanceof Array\n\t\t\t\t\t&& areArraysSame(itemA, itemB)\n\t\t\t\t) || (\n\t\t\t\t\titemA === itemB\n\t\t\t\t)\n\t\t\t)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n","import React, {\n\tuseEffect,\n\tuseState\n} from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n\taddWeaponToGame,\n\tdeleteWeapons,\n\tgetWeaponForPlayer,\n\tgetWinner\n} from '../services/game';\nimport { areObjectsSame } from '../services/utils';\n\nfunction Game({ gameDocument, players, userId }) {\n\tconst [\n\t\tweapon,\n\t\tsetWeapon\n\t] = useState(null);\n\n\tconst [\n\t\twinner,\n\t\tsetWinner\n\t] = useState({});\n\n\tuseEffect(() => {\n\t\tgetWeaponForPlayer(gameDocument, userId)\n\t\t\t.then(weapon => setWeapon(weapon));\n\t}, [gameDocument, userId]);\n\n\tuseEffect(() => {\n\t\tconst gameWinner = getWinner(players);\n\n\t\tif (!areObjectsSame(gameWinner, winner)) {\n\t\t\tsetWinner(gameWinner);\n\t\t}\n\t}, [players]);\n\n\tconst getPlayerNamesCopy = () => players.map(player => player.name).join(' vs. ');\n\n\tconst getOpponentName = () => players.find(player => player.userId !== winner.userId).name;\n\n\tconst getWeaponIcon = weapon => {\n\t\tlet className = '';\n\n\t\tswitch (weapon) {\n\t\t\tcase 'Rock':\n\t\t\t\tclassName = 'fas fa-hand-rock';\n\t\t\t\tbreak;\n\t\t\tcase 'Paper':\n\t\t\t\tclassName = 'fas fa-hand-paper';\n\t\t\t\tbreak;\n\t\t\tcase 'Scissors':\n\t\t\t\tclassName = 'fas fa-hand-scissors';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\n\t\treturn <i className={ className }></i>;\n\t};\n\n\tconst onClickWeaponHandler = e => {\n\t\tconst weapon = e.currentTarget.dataset.name;\n\n\t\taddWeaponToGame(gameDocument, userId, weapon)\n\t\t\t.then(() => setWeapon(weapon));\n\t};\n\n\tif (winner.tie) {\n\t\tsetTimeout(() => {\n\t\t\tdeleteWeapons(gameDocument);\n\t\t\tsetWeapon(null);\n\t\t\tsetWinner({});\n\t\t}, 3000);\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h5 className=\"card-title\">{ getPlayerNamesCopy() }</h5>\n\t\t\t\t<p className=\"card-text\">It was a tie! Both selected <span className=\"text-primary\">{ getWeaponIcon(winner.weapon) }</span>. Starting a new match...</p>\n\t\t\t</>\n\t\t);\n\t}\n\n\tif (winner.userId) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h5 className=\"card-title\">\n\t\t\t\t\t{ winner.userId === userId\n\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t`Congrats, you beat ${getOpponentName()} with `,\n\t\t\t\t\t\t\t<span className=\"text-primary\" key={ weapon }>{ getWeaponIcon(weapon) }</span>,\n\t\t\t\t\t\t\t'!'\n\t\t\t\t\t\t]\n\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t`Sorry, ${winner.name} won with `,\n\t\t\t\t\t\t\t<span className=\"text-primary\" key={ weapon }>{ getWeaponIcon(winner.weapon) }</span>,\n\t\t\t\t\t\t\t'.'\n\t\t\t\t\t\t] }\n\t\t\t\t</h5>\n\t\t\t\t<Link to=\"/home\" className=\"btn btn-primary btn-block\">Play again?</Link>\n\t\t\t</>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h5 className=\"card-title\">{ getPlayerNamesCopy() }</h5>\n\t\t\t{ weapon\n\t\t\t\t? <p className=\"card-text\">\n\t\t\t\t\tYou chose <span className=\"text-primary\">{ getWeaponIcon(weapon) }</span>!\n\t\t\t\t\t<br/>\n\t\t\t\t\tWaiting for your opponent...\n\t\t\t\t</p>\n\t\t\t\t: <>\n\t\t\t\t\t<p className=\"card-text\">Choose your weapon!</p>\n\t\t\t\t\t<div className=\"btn-group d-flex\">\n\t\t\t\t\t\t{ ['Rock', 'Paper', 'Scissors'].map(weapon => (\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-outline-primary\" style={{ flexGrow: 1 }} data-name={ weapon } onClick={ onClickWeaponHandler } key={ weapon }>\n\t\t\t\t\t\t\t\t{ getWeaponIcon(weapon) }\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t)) }\n\t\t\t\t\t</div>\n\t\t\t\t</> }\n\t\t</>\n\t);\n}\n\nexport default Game;\n","import React, {\n\tuseEffect,\n\tuseState,\n} from 'react';\nimport {\n\tRedirect,\n\tuseParams\n} from 'react-router-dom';\nimport Game from './Game';\nimport {\n\taddPlayerToGame,\n\tgetGameDocument\n} from '../services/game';\nimport {\n\tgetLocalUser,\n\tgetUser\n} from '../services/user';\nimport { areArraysSame } from '../services/utils';\n\nfunction GameLobby() {\n\tconst { gameId } = useParams();\n\tconst { id: userId } = getLocalUser();\n\tconst gameDocument = getGameDocument(gameId);\n\n\tconst [\n\t\tplayers,\n\t\tsetPlayers\n\t] = useState([]);\n\n\tconst [\n\t\tredirectTo,\n\t\tsetRedirectTo\n\t] = useState(null);\n\n\tuseEffect(() => gameDocument.collection('players')\n\t\t.onSnapshot(snapshot => {\n\t\t\tconst promises = snapshot.docs.map(document => {\n\t\t\t\tconst {userId, weapon} = document.data();\n\t\t\t\treturn getUser(userId)\n\t\t\t\t\t.then(user => {\n\t\t\t\t\t\tuser.userId = userId;\n\t\t\t\t\t\tuser.weapon = weapon;\n\t\t\t\t\t\treturn user;\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\tPromise.all(promises)\n\t\t\t\t.then(gamePlayers => {\n\t\t\t\t\tif (!gamePlayers.find(({ userId: playerId }) => playerId === userId)) {\n\t\t\t\t\t\tif (gamePlayers.length >= 2) {\n\t\t\t\t\t\t\tsetRedirectTo('/home');\n\t\t\t\t\t\t} else if (!userId) {\n\t\t\t\t\t\t\tsetRedirectTo(`/home?redirectTo=${window.location.hash.slice(1)}`);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\taddPlayerToGame(gameDocument, userId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!areArraysSame(gamePlayers, players)) {\n\t\t\t\t\t\tsetPlayers(gamePlayers);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}), []);\n\n\tif (redirectTo) {\n\t\treturn <Redirect to={ redirectTo } />;\n\t}\n\n\treturn (\n\t\t<div className=\"row\">\n\t\t\t<div className=\"col-sm-8 offset-sm-2\">\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<div className=\"card-header\">{ gameId }</div>\n\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t{ players.length < 2\n\t\t\t\t\t\t\t? <h5 className=\"card-title\">Waiting for player...</h5>\n\t\t\t\t\t\t\t: <Game gameDocument={ gameDocument } players={ players } userId={ userId } /> }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default GameLobby;\n","import React, {\n\tuseState\n} from 'react';\nimport { Redirect } from 'react-router-dom';\n\nfunction GameNew({ userId }) {\n\tconst [\n\t\tgameId,\n\t\tsetGameId\n\t] = useState(null);\n\n\tconst onClickHostHandler = () => {\n\t\tconst gameId = `Game_${Math.round(Math.random() * 1000)}`;\n\t\tsetGameId(gameId);\n\t};\n\n\tconst onSubmitJoinHandler = e => {\n\t\te.preventDefault();\n\n\t\tconst gameId = e.target.elements.name.value.trim();\n\t\tsetGameId(gameId);\n\t};\n\n\tif (gameId) {\n\t\treturn <Redirect to={`/game/${gameId}`} />;\n\t}\n\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<div className=\"card-body\">\n\t\t\t\t<p className=\"card-text\">Decide if you want to start a new game, or join an existing one</p>\n\t\t\t\t<button className=\"btn btn-primary btn-block mb-3\" onClick={ onClickHostHandler }>Start a new game</button>\n\n\t\t\t\t<hr/>\n\n\t\t\t\t<form className=\"form-inline\" onSubmit={ onSubmitJoinHandler }>\n\t\t\t\t\t<div className=\"input-group w-100\">\n\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Game Name\"/>\n\t\t\t\t\t\t<div className=\"input-group-append\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">Join a game</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default GameNew;\n","import React from 'react';\nimport { addUser } from '../services/user';\n\nfunction UserNew({ user, setUser }) {\n\tconst onSubmitHandler = e => {\n\t\te.preventDefault();\n\n\t\tconst name = e.target.elements.name.value.trim();\n\t\tconst email = e.target.elements.email.value.trim().toLowerCase();\n\n\t\tif (!name || !email) {\n\t\t\treturn;\n\t\t}\n\n\t\taddUser({ name, email }).then(setUser);\n\t};\n\n\tif (\n\t\ttypeof user.name !== 'undefined'\n\t\t&& typeof user.email !== 'undefined'\n\t) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<div className=\"card-body\">\n\t\t\t\t<h5 className=\"card-title\">New phone, who dis?</h5>\n\t\t\t\t<p className=\"card-text\">Before we begin, I need to know who you are</p>\n\t\t\t\t<form onSubmit={ onSubmitHandler }>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Your Name\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Your Email\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary btn-block\">Let's RPS!</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default UserNew;\n","import React, {\n\tuseState\n} from 'react';\nimport {\n\tRedirect,\n\tuseLocation,\n} from 'react-router-dom';\nimport GameNew from './GameNew';\nimport UserNew from './UserNew';\nimport {\n\tgetLocalUser,\n\tsetLocalUser\n} from '../services/user';\n\nfunction Home() {\n\tconst [\n\t\tuser,\n\t\tsetUser\n\t] = useState(getLocalUser());\n\n\tconst redirectTo = new URLSearchParams(useLocation().search).get('redirectTo');\n\n\tconst setLocalAndStateUser = user => {\n\t\tsetLocalUser(user);\n\t\tsetUser(user);\n\t};\n\n\tif (user.id && redirectTo) {\n\t\treturn <Redirect to={ redirectTo }/>;\n\t}\n\n\treturn (\n\t\t<div className=\"row\">\n\t\t\t<div className=\"col-sm-8 offset-sm-2\">\n\t\t\t\t<UserNew user={ user } setUser={ setLocalAndStateUser } />\n\t\t\t\t{ user.id\n\t\t\t\t\t? <GameNew userId={ user.id }/>\n\t\t\t\t\t: null }\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Home;\n","import React from 'react';\nimport {\n\tLink,\n\tuseRouteMatch\n} from 'react-router-dom';\n\nfunction Navbar() {\n\tconst dashboardMatch = useRouteMatch({\n\t\tpath: '/dashboard',\n\t\tstrict: true\n\t});\n\tconst homeMatch = useRouteMatch({\n\t\tpath: '/home',\n\t\tstrict: true\n\t});\n\n\treturn (\n\t\t<ul className=\"nav nav-pills mt-3 mb-5\">\n\t\t\t<li className=\"nav-item\">\n\t\t\t\t<Link className={ `nav-link${homeMatch ? ' active' : ''}` } to=\"/home\">Home</Link>\n\t\t\t</li>\n\t\t\t<li className=\"nav-item\">\n\t\t\t\t<Link className={ `nav-link${dashboardMatch ? ' active' : ''}` } to=\"/dashboard\">Dashboard</Link>\n\t\t\t</li>\n\t\t</ul>\n\t);\n}\n\nexport default Navbar;\n","import React from 'react';\nimport {\n\tHashRouter as Router,\n\tRedirect,\n\tRoute,\n\tSwitch\n} from 'react-router-dom';\nimport Dashboard from './Dashboard';\nimport GameLobby from './GameLobby';\nimport Home from './Home';\nimport Navbar from './Navbar';\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<Navbar/>\n\n\t\t\t<Switch>\n\t\t\t\t<Redirect exact from=\"/\" to=\"/home\" />\n\n\t\t\t\t<Route path=\"/game/:gameId\">\n\t\t\t\t\t<GameLobby />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/dashboard\">\n\t\t\t\t\t<Dashboard />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/home\">\n\t\t\t\t\t<Home />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}