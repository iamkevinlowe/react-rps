{"version":3,"sources":["services/db.js","services/user.js","components/UserNew.js","services/game.js","components/GameNew.js","components/Home.js","services/utils.js","components/Game.js","components/GameLobby.js","components/App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getLocalUser","localUser","JSON","parse","localStorage","getItem","error","console","log","removeItem","setLocalUser","user","setItem","stringify","addUser","a","db","collection","add","then","document","id","getUser","userId","doc","get","snapshot","data","UserNew","setUser","name","email","className","onSubmit","e","preventDefault","target","elements","value","trim","toLowerCase","type","placeholder","getGameDocument","gameId","addPlayerToGame","gameDocument","constructor","values","weapon","set","merge","addWeaponToGame","update","getWeaponForPlayer","getPlayers","where","FieldPath","documentId","Object","keys","docs","map","getWinner","gameSnapshot","gameData","playerIds","length","some","playerId","tie","aWeapon","bWeapon","deleteWeapons","forEach","GameNew","useState","setGameId","to","onClick","Math","round","random","Home","areObjectsSame","objectA","objectB","i","key","areArraysSame","arrayA","arrayB","Array","arrayASorted","slice","sort","arrayBSorted","itemA","itemB","Game","players","setPlayers","setWeapon","winner","setWinner","useEffect","gamePlayers","onSnapshot","gameWinner","assign","setTimeout","opponent","find","player","getWinnerCopy","join","htmlFor","GameLobby","useParams","numPlayers","setNumPlayers","snapshotPlayers","exists","includes","ref","App","path","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.607ac7fe.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\n\nimport 'firebase/firestore';\n\nfirebase.initializeApp({\n\tapiKey: 'AIzaSyCpU5AfFhgbrjaTR8sKyB_O6h9VYGCNmDk',\n\tauthDomain: 'rock-paper-scissors-b198e.firebaseapp.com',\n\tdatabaseURL: 'https://rock-paper-scissors-b198e.firebaseio.com',\n\tprojectId: 'rock-paper-scissors-b198e',\n\tstorageBucket: 'rock-paper-scissors-b198e.appspot.com',\n\tmessagingSenderId: '530589049037',\n\tappId: '1:530589049037:web:f677fbd6b66d8483654984'\n});\n\nexport default firebase.firestore();\n","import db from './db';\n\n/**\n * Gets the local user from the browser's local storage\n *\n * @returns {{}|{email: string, id: string, name: string}}\n */\nexport const getLocalUser = () => {\n\tlet localUser = {};\n\n\ttry {\n\t\tlocalUser = JSON.parse(localStorage.getItem('player')) || {};\n\t} catch (error) {\n\t\tconsole.log('Deleting corrupted player in local storage.');\n\t\tlocalStorage.removeItem('player');\n\t}\n\n\treturn localUser;\n};\n\n/**\n * Sets the given user on the browser's local storage\n *\n * @param   {object}    user\n */\nexport const setLocalUser = user => localStorage.setItem('player', JSON.stringify(user));\n\n/**\n * Inserts a user to the users collection\n *\n * @param   {object}            user\n * @returns {Promise<{object}>}\n */\nexport const addUser = async user => db.collection('users')\n\t.add(user)\n\t.then(document => {\n\t\tuser.id = document.id;\n\t\treturn user;\n\t});\n\n/**\n * Gets the data for the given user\n *\n * @param   {string}                                    userId\n * @returns {Promise<firebase.firestore.DocumentData>}\n */\nexport const getUser = async userId => db.collection('users')\n\t.doc(userId)\n\t.get()\n\t.then(snapshot => snapshot.data());\n","import React from 'react';\nimport { addUser } from '../services/user';\n\nfunction UserNew({ user, setUser }) {\n\tconst onSubmitHandler = e => {\n\t\te.preventDefault();\n\n\t\tconst name = e.target.elements.name.value.trim();\n\t\tconst email = e.target.elements.email.value.trim().toLowerCase();\n\n\t\tif (!name || !email) {\n\t\t\treturn;\n\t\t}\n\n\t\taddUser({ name, email }).then(setUser);\n\t};\n\n\tif (\n\t\ttypeof user.name !== 'undefined'\n\t\t&& typeof user.email !== 'undefined'\n\t) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div className=\"row\">\n\t\t\t<div className=\"col-sm-4 offset-md-4\">\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t<h5 className=\"card-title\">New phone, who dis?</h5>\n\t\t\t\t\t\t<p className=\"card-text\">Before we begin, I need to know who you are</p>\n\t\t\t\t\t\t<form onSubmit={ onSubmitHandler }>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Your Name\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Your Email\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary btn-block\">Let's RPS!</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default UserNew;\n","import * as firebase from 'firebase/app';\nimport db from './db';\n\n/**\n * Gets a document reference\n *\n * @param   {string}                                gameId\n * @returns {firebase.firestore.DocumentReference}\n */\nexport const getGameDocument = gameId => db.collection('games').doc(gameId);\n\n/**\n * Inserts a player with no weapon to the given game\n *\n * @param   {string|firebase.firestore.DocumentReference}   gameId\n * @param   {string}                                        userId\n * @returns {Promise<void>}\n */\nexport const addPlayerToGame = async (gameId, userId) => {\n\tconst gameDocument = gameId.constructor.name === 'DocumentReference'\n\t\t? gameId\n\t\t: getGameDocument(gameId);\n\n\tconst values = {};\n\tvalues[userId] = { weapon: null };\n\n\treturn gameDocument.set(values, { merge: true });\n};\n\n/**\n * Updates a player's weapon\n *\n * @param   {firebase.firestore.DocumentReference}  gameDocument\n * @param   {string}                                userId\n * @param   {string}                                weapon\n * @returns {Promise<void>}\n */\nexport const addWeaponToGame = async (gameDocument, userId, weapon) => {\n\tconst values = {};\n\tvalues[userId] = { weapon };\n\n\treturn gameDocument.update(values);\n};\n\n/**\n * Gets the weapon for the given player\n *\n * @param   {firebase.firestore.DocumentReference}  gameDocument\n * @param   {string}                                userId\n * @returns {Promise<string|void>}\n */\nexport const getWeaponForPlayer = async (gameDocument, userId) => gameDocument.get()\n\t.then(snapshot => snapshot.data()[userId].weapon);\n\n/**\n * Gets the players for the given game\n *\n * @param   {firebase.firestore.DocumentReference}          gameDocument\n * @returns {Promise<firebase.firestore.DocumentData[]>}\n */\nexport const getPlayers = async gameDocument => gameDocument.get()\n\t.then(snapshot => db.collection('users')\n\t\t.where(firebase.firestore.FieldPath.documentId(), 'in', Object.keys(snapshot.data()))\n\t\t.get()\n\t\t.then(snapshot => snapshot.docs.map(document => {\n\t\t\tconst user = document.data();\n\t\t\tuser.userId = document.id;\n\t\t\treturn user;\n\t\t}))\n\t);\n\n/**\n * Determines the winner from the document snapshot data\n *\n * @param   {firebase.firestore.DocumentSnapshot}   gameSnapshot\n * @returns {{tie: boolean, userId: *, weapon: *}}\n */\nexport const getWinner = gameSnapshot => {\n\tconst gameData = gameSnapshot.data();\n\tconst playerIds = Object.keys(gameData);\n\n\tif (\n\t\tplayerIds.length < 2\n\t\t|| playerIds.some(playerId => gameData[playerId].weapon === null)\n\t) {\n\t\treturn { tie: false, userId: null, weapon: null };\n\t}\n\n\tconst [aWeapon, bWeapon] = playerIds.map(playerId => ({\n\t\ttie: false,\n\t\tuserId: playerId,\n\t\tweapon: gameData[playerId].weapon\n\t}));\n\n\tif (\n\t\t(aWeapon.weapon === 'Rock' && bWeapon.weapon === 'Scissors')\n\t\t|| (aWeapon.weapon === 'Paper' && bWeapon.weapon === 'Rock')\n\t\t|| (aWeapon.weapon === 'Scissors' && bWeapon.weapon === 'Paper')\n\t) {\n\t\treturn aWeapon;\n\t} else if (aWeapon.weapon === bWeapon.weapon) {\n\t\treturn { tie: true, userId: null, weapon: aWeapon.weapon };\n\t} else {\n\t\treturn bWeapon;\n\t}\n};\n\n/**\n * Resets the player's weapons for the given game\n *\n * @param {firebase.firestore.DocumentReference}    gameDocument\n */\nexport const deleteWeapons = gameDocument => gameDocument.get()\n\t.then(snapshot => Object.keys(snapshot.data())\n\t\t.forEach(userId => addPlayerToGame(gameDocument, userId))\n\t);\n","import React, {\n\tuseState\n} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { addPlayerToGame } from '../services/game';\n\nfunction GameNew({ userId }) {\n\tconst [\n\t\tgameId,\n\t\tsetGameId\n\t] = useState(null);\n\n\tconst onClickHostHandler = () => {\n\t\tconst gameId = `Game_${Math.round(Math.random() * 1000)}`;\n\n\t\taddPlayerToGame(gameId, userId)\n\t\t\t.then(() => setGameId(gameId));\n\t};\n\n\tconst onSubmitJoinHandler = e => {\n\t\te.preventDefault();\n\n\t\tconst gameId = e.target.elements.name.value.trim();\n\n\t\taddPlayerToGame(gameId, userId)\n\t\t\t.then(() => setGameId(gameId));\n\t};\n\n\tif (gameId) {\n\t\treturn <Redirect to={`/game/${gameId}`} />;\n\t}\n\n\treturn (\n\t\t<div className=\"row\">\n\t\t\t<div className=\"col-sm-4 offset-sm-4\">\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t<p className=\"card-text\">Decide if you want to start a new game, or join an existing one</p>\n\t\t\t\t\t\t<button className=\"btn btn-primary btn-block mb-3\" onClick={ onClickHostHandler }>Start a new game</button>\n\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t<form onSubmit={ onSubmitJoinHandler }>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Game Name\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary btn-block\">Join a game</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default GameNew;\n","import React, {\n\tuseState\n} from 'react';\nimport UserNew from './UserNew';\nimport GameNew from './GameNew';\nimport {\n\tgetLocalUser,\n\tsetLocalUser\n} from '../services/user';\n\nfunction Home() {\n\tconst [\n\t\tuser,\n\t\tsetUser\n\t] = useState(getLocalUser());\n\n\tconst setLocalAndStateUser = user => {\n\t\tsetLocalUser(user);\n\t\tsetUser(user);\n\t};\n\n\treturn (\n\t\t<div className=\"Home\">\n\t\t\t<UserNew user={ user } setUser={ setLocalAndStateUser } />\n\t\t\t{ user.id\n\t\t\t\t? <GameNew userId={ user.id }/>\n\t\t\t\t: null }\n\t\t</div>\n\t);\n}\n\nexport default Home;\n","export const areObjectsSame = (objectA, objectB) => {\n\tif (!(objectA instanceof Object && objectB instanceof Object)) {\n\t\treturn false;\n\t}\n\n\tconst keys = Object.keys(objectA);\n\tif (keys.length !== Object.keys(objectB).length) {\n\t\treturn false\n\t}\n\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key = keys[i];\n\t\tif (objectA[key] !== objectB[key]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n\nexport const areArraysSame = (arrayA, arrayB) => {\n\tif (\n\t\t!(arrayA instanceof Array && arrayB instanceof Array)\n\t\t|| arrayA.length !== arrayB.length\n\t) {\n\t\treturn false;\n\t}\n\n\tconst arrayASorted = arrayA.slice(0).sort();\n\tconst arrayBSorted = arrayB.slice(0).sort();\n\n\tfor (let i = 0; i < arrayASorted.length; i++) {\n\t\tconst itemA = arrayASorted[i];\n\t\tconst itemB = arrayBSorted[i];\n\n\t\tif (\n\t\t\t!(\n\t\t\t\t(\n\t\t\t\t\titemA instanceof Object\n\t\t\t\t\t&& areObjectsSame(itemA, itemB)\n\t\t\t\t) || (\n\t\t\t\t\titemA instanceof Array\n\t\t\t\t\t&& areArraysSame(itemA, itemB)\n\t\t\t\t) || (\n\t\t\t\t\titemA === itemB\n\t\t\t\t)\n\t\t\t)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n","import React, {\n\tuseEffect,\n\tuseState\n} from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n\taddWeaponToGame,\n\tdeleteWeapons,\n\tgetPlayers,\n\tgetWeaponForPlayer,\n\tgetWinner\n} from '../services/game';\nimport { getUser } from '../services/user';\nimport {\n\tareArraysSame,\n\tareObjectsSame\n} from '../services/utils';\n\nfunction Game({ gameDocument, userId }) {\n\tconst [\n\t\tplayers,\n\t\tsetPlayers\n\t] = useState([]);\n\n\tconst [\n\t\tweapon,\n\t\tsetWeapon\n\t] = useState(null);\n\n\tconst [\n\t\twinner,\n\t\tsetWinner\n\t] = useState(null);\n\n\tuseEffect(() => {\n\t\tgetPlayers(gameDocument)\n\t\t\t.then(gamePlayers => {\n\t\t\t\tif (!areArraysSame(gamePlayers, players)) {\n\t\t\t\t\tsetPlayers(gamePlayers);\n\t\t\t\t}\n\t\t\t});\n\n\t\tgetWeaponForPlayer(gameDocument, userId)\n\t\t\t.then(weapon => setWeapon(weapon));\n\n\t\treturn gameDocument.onSnapshot(snapshot => {\n\t\t\tconst gameWinner = getWinner(snapshot);\n\n\t\t\tif (gameWinner.tie) {\n\t\t\t\tsetWinner(gameWinner);\n\t\t\t} else if (gameWinner.userId) {\n\t\t\t\tgetUser(gameWinner.userId)\n\t\t\t\t\t.then(user => {\n\t\t\t\t\t\tObject.assign(user, gameWinner);\n\n\t\t\t\t\t\tif (!areObjectsSame(user, winner)) {\n\t\t\t\t\t\t\tsetWinner(user);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}, [gameDocument, userId]);\n\n\tconst getPlayerNamesCopy = () => players.map(player => player.name).join(' vs ');\n\n\tconst getWinnerCopy = () => {\n\t\tif (winner) {\n\t\t\tif (winner.tie) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tdeleteWeapons(gameDocument);\n\t\t\t\t\tsetWeapon(null);\n\t\t\t\t\tsetWinner(null);\n\t\t\t\t}, 3000);\n\n\t\t\t\treturn `It was a tie! Both selected ${winner.weapon}. Starting a new match...`;\n\t\t\t} else if (winner.userId === userId) {\n\t\t\t\tconst opponent = players.find(player => player.userId !== winner.userId);\n\t\t\t\treturn `Congrats, you beat ${opponent.name} with ${weapon}!`;\n\t\t\t} else {\n\t\t\t\treturn `Sorry, ${winner.name} won with ${winner.weapon}.`;\n\t\t\t}\n\t\t}\n\n\t\treturn '';\n\t};\n\n\tconst onSubmitHandler = e => {\n\t\te.preventDefault();\n\n\t\tconst weapon = e.target.elements.weapon.value;\n\n\t\taddWeaponToGame(gameDocument, userId, weapon)\n\t\t\t.then(() => setWeapon(weapon));\n\t};\n\n\tif (winner !== null) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h5 className=\"card-title\">{ getWinnerCopy() }</h5>\n\t\t\t\t{ winner.tie === false\n\t\t\t\t\t? <Link to=\"/\" className=\"btn btn-primary btn-block\">Play again?</Link>\n\t\t\t\t\t: null }\n\t\t\t</>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h5 className=\"card-title\">{ getPlayerNamesCopy() }</h5>\n\t\t\t{ weapon\n\t\t\t\t? <p className=\"card-text\">You chose {weapon}! Waiting for your opponent...</p>\n\t\t\t\t: <>\n\t\t\t\t\t<p className=\"card-text\">Choose your weapon!</p>\n\t\t\t\t\t<form onSubmit={ onSubmitHandler }>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<div className=\"form-check\">\n\t\t\t\t\t\t\t\t<input id=\"weapon_rock\" className=\"form-check-input\" type=\"radio\" name=\"weapon\" value=\"Rock\"/>\n\t\t\t\t\t\t\t\t<label htmlFor=\"weapon_rock\" className=\"form-check-label\">Rock</label>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"form-check\">\n\t\t\t\t\t\t\t\t<input id=\"weapon_paper\" className=\"form-check-input\" type=\"radio\" name=\"weapon\" value=\"Paper\"/>\n\t\t\t\t\t\t\t\t<label htmlFor=\"weapon_paper\" className=\"form-check-label\">Paper</label>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"form-check\">\n\t\t\t\t\t\t\t\t<input id=\"weapon_scissors\" className=\"form-check-input\" type=\"radio\" name=\"weapon\" value=\"Scissors\"/>\n\t\t\t\t\t\t\t\t<label htmlFor=\"weapon_scissors\" className=\"form-check-label\">Scissors</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary btn-block\">Shoot!</button>\n\t\t\t\t\t</form>\n\t\t\t\t</>\n\t\t\t}\n\t\t</>\n\t);\n}\n\nexport default Game;\n","import React, {\n\tuseEffect,\n\tuseState,\n} from 'react';\nimport {\n\tRedirect,\n\tuseParams\n} from 'react-router-dom';\nimport Game from './Game';\nimport { getLocalUser } from '../services/user';\nimport {\n\taddPlayerToGame,\n\tgetGameDocument\n} from '../services/game';\n\nfunction GameLobby() {\n\tconst { gameId } = useParams();\n\tconst { id: userId } = getLocalUser();\n\tconst gameDocument = getGameDocument(gameId);\n\n\tconst [\n\t\tnumPlayers,\n\t\tsetNumPlayers\n\t] = useState(0);\n\n\tuseEffect(() => gameDocument.onSnapshot(snapshot => {\n\t\tconst snapshotPlayers = snapshot.exists\n\t\t\t? Object.keys(snapshot.data())\n\t\t\t: [];\n\n\t\tif (!snapshotPlayers.includes(userId)) {\n\t\t\taddPlayerToGame(snapshot.ref, userId);\n\t\t\treturn;\n\t\t}\n\n\t\tsetNumPlayers(snapshotPlayers.length);\n\t}), []);\n\n\tif (!gameId || !userId) {\n\t\treturn <Redirect to=\"/\" />;\n\t}\n\n\treturn (\n\t\t<div className=\"row\">\n\t\t\t<div className=\"col-sm-4 offset-sm-4\">\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<div className=\"card-header\">\n\t\t\t\t\t\t{ gameId }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t{ numPlayers < 2\n\t\t\t\t\t\t\t? <h5 className=\"card-title\">Waiting for player...</h5>\n\t\t\t\t\t\t\t: <Game gameDocument={ gameDocument } userId={ userId } /> }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default GameLobby;\n","import React from 'react';\nimport {\n\tHashRouter as Router,\n\tRoute,\n\tSwitch\n} from 'react-router-dom';\nimport Home from './Home';\nimport GameLobby from './GameLobby';\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/game/:gameId\">\n\t\t\t\t\t<GameLobby />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t<Home />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}